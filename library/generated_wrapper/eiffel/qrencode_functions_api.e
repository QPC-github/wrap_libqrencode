note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"
-- functions wrapper
class QRENCODE_FUNCTIONS_API


feature -- Access

	qrinput_new: detachable QRINPUT_STRUCT_API
		do
			if attached c_qrinput_new as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		end

	qrinput_new2 (version: INTEGER; level: INTEGER): detachable QRINPUT_STRUCT_API
		do
			if attached c_qrinput_new2 (version, level) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		end

	qrinput_new_mqr (version: INTEGER; level: INTEGER): detachable QRINPUT_STRUCT_API
		do
			if attached c_qrinput_new_mqr (version, level) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		end

	qrinput_append (input: QRINPUT_STRUCT_API; mode: INTEGER; size: INTEGER; data: STRING): INTEGER
		local
			data_c_string: C_STRING
		do
			create data_c_string.make (data)
			Result := c_qrinput_append (input.item, mode, size, data_c_string.item)
		end

	qrinput_append_eciheader (input: QRINPUT_STRUCT_API; ecinum: INTEGER): INTEGER
		do
			Result := c_qrinput_append_eciheader (input.item, ecinum)
		end

	qrinput_get_version (input: QRINPUT_STRUCT_API): INTEGER
		do
			Result := c_qrinput_get_version (input.item)
		end

	qrinput_set_version (input: QRINPUT_STRUCT_API; version: INTEGER): INTEGER
		do
			Result := c_qrinput_set_version (input.item, version)
		end

	qrinput_get_error_correction_level (input: QRINPUT_STRUCT_API): INTEGER
		do
			Result := c_qrinput_get_error_correction_level (input.item)
		end

	qrinput_set_error_correction_level (input: QRINPUT_STRUCT_API; level: INTEGER): INTEGER
		do
			Result := c_qrinput_set_error_correction_level (input.item, level)
		end

	qrinput_set_version_and_error_correction_level (input: QRINPUT_STRUCT_API; version: INTEGER; level: INTEGER): INTEGER
		do
			Result := c_qrinput_set_version_and_error_correction_level (input.item, version, level)
		end

	qrinput_free (input: QRINPUT_STRUCT_API)
		do
			c_qrinput_free (input.item)
		end

	qrinput_check (mode: INTEGER; size: INTEGER; data: STRING): INTEGER
		local
			data_c_string: C_STRING
		do
			create data_c_string.make (data)
			Result := c_qrinput_check (mode, size, data_c_string.item)
		end

	qrinput_struct_new: detachable QRINPUT_STRUCT_STRUCT_API
		do
			if attached c_qrinput_struct_new as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		end

	qrinput_struct_set_parity (s: QRINPUT_STRUCT_STRUCT_API; parity: INTEGER)
		do
			c_qrinput_struct_set_parity (s.item, parity)
		end

	qrinput_struct_append_input (s: QRINPUT_STRUCT_STRUCT_API; input: QRINPUT_STRUCT_API): INTEGER
		do
			Result := c_qrinput_struct_append_input (s.item, input.item)
		end

	qrinput_struct_free (s: QRINPUT_STRUCT_STRUCT_API)
		do
			c_qrinput_struct_free (s.item)
		end

	qrinput_split_qrinput_to_struct (input: QRINPUT_STRUCT_API): detachable QRINPUT_STRUCT_STRUCT_API
		do
			if attached c_qrinput_split_qrinput_to_struct (input.item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		end

	qrinput_struct_insert_structured_append_headers (s: QRINPUT_STRUCT_STRUCT_API): INTEGER
		do
			Result := c_qrinput_struct_insert_structured_append_headers (s.item)
		end

	qrinput_set_fnc1first (input: QRINPUT_STRUCT_API): INTEGER
		do
			Result := c_qrinput_set_fnc1first (input.item)
		end

	qrinput_set_fnc1second (input: QRINPUT_STRUCT_API; appid: INTEGER): INTEGER
		do
			Result := c_qrinput_set_fnc1second (input.item, appid)
		end

	qrcode_encode_input (input: QRINPUT_STRUCT_API): detachable QRCODE_STRUCT_API
		do
			if attached c_qrcode_encode_input (input.item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		end

	qrcode_encode_string (string: STRING; version: INTEGER; level: INTEGER; hint: INTEGER; casesensitive: INTEGER): detachable QRCODE_STRUCT_API
		local
			string_c_string: C_STRING
		do
			create string_c_string.make (string)
			if attached c_qrcode_encode_string (string_c_string.item, version, level, hint, casesensitive) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		end

	qrcode_encode_string8bit (string: STRING; version: INTEGER; level: INTEGER): detachable QRCODE_STRUCT_API
		local
			string_c_string: C_STRING
		do
			create string_c_string.make (string)
			if attached c_qrcode_encode_string8bit (string_c_string.item, version, level) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		end

	qrcode_encode_string_mqr (string: STRING; version: INTEGER; level: INTEGER; hint: INTEGER; casesensitive: INTEGER): detachable QRCODE_STRUCT_API
		local
			string_c_string: C_STRING
		do
			create string_c_string.make (string)
			if attached c_qrcode_encode_string_mqr (string_c_string.item, version, level, hint, casesensitive) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		end

	qrcode_encode_string8bit_mqr (string: STRING; version: INTEGER; level: INTEGER): detachable QRCODE_STRUCT_API
		local
			string_c_string: C_STRING
		do
			create string_c_string.make (string)
			if attached c_qrcode_encode_string8bit_mqr (string_c_string.item, version, level) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		end

	qrcode_encode_data (size: INTEGER; data: STRING; version: INTEGER; level: INTEGER): detachable QRCODE_STRUCT_API
		local
			data_c_string: C_STRING
		do
			create data_c_string.make (data)
			if attached c_qrcode_encode_data (size, data_c_string.item, version, level) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		end

	qrcode_encode_data_mqr (size: INTEGER; data: STRING; version: INTEGER; level: INTEGER): detachable QRCODE_STRUCT_API
		local
			data_c_string: C_STRING
		do
			create data_c_string.make (data)
			if attached c_qrcode_encode_data_mqr (size, data_c_string.item, version, level) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		end

	qrcode_free (qrcode: QRCODE_STRUCT_API)
		do
			c_qrcode_free (qrcode.item)
		end

	qrcode_encode_input_structured (s: QRINPUT_STRUCT_STRUCT_API): detachable QRCODE_LIST_STRUCT_API
		do
			if attached c_qrcode_encode_input_structured (s.item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		end

	qrcode_encode_string_structured (string: STRING; version: INTEGER; level: INTEGER; hint: INTEGER; casesensitive: INTEGER): detachable QRCODE_LIST_STRUCT_API
		local
			string_c_string: C_STRING
		do
			create string_c_string.make (string)
			if attached c_qrcode_encode_string_structured (string_c_string.item, version, level, hint, casesensitive) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		end

	qrcode_encode_string8bit_structured (string: STRING; version: INTEGER; level: INTEGER): detachable QRCODE_LIST_STRUCT_API
		local
			string_c_string: C_STRING
		do
			create string_c_string.make (string)
			if attached c_qrcode_encode_string8bit_structured (string_c_string.item, version, level) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end
		end

	qrcode_encode_data_structured (size: INTEGER; data: STRING; version: INTEGER; level: INTEGER): detachable QRCODE_LIST_STRUCT_API
		local
			data_c_string: C_STRING
		do
			create data_c_string.make (data)
			if attached c_qrcode_encode_data_structured (size, data_c_string.item, version, level) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		end

	qrcode_list_size (qrlist: QRCODE_LIST_STRUCT_API): INTEGER
		do
			Result := c_qrcode_list_size (qrlist.item)
		end

	qrcode_list_free (qrlist: QRCODE_LIST_STRUCT_API)
		do
			c_qrcode_list_free (qrlist.item)
		end

	qrcode_apiversion (major_version: POINTER; minor_version: POINTER; micro_version: POINTER)
		do
			c_qrcode_apiversion (major_version, minor_version, micro_version)
		end

	qrcode_apiversion_string: POINTER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRcode_APIVersionString ();
			]"
		end

	qrcode_clear_cache
		external
			"C inline use <qrencode.h>"
		alias
			"[
				QRcode_clearCache ();
			]"
		end

feature -- Externals

	c_qrinput_new: POINTER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRinput_new ();
			]"
		end

	c_qrinput_new2 (version: INTEGER; level: INTEGER): POINTER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRinput_new2 ((int)$version, (QRecLevel)$level);
			]"
		end

	c_qrinput_new_mqr (version: INTEGER; level: INTEGER): POINTER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRinput_newMQR ((int)$version, (QRecLevel)$level);
			]"
		end

	c_qrinput_append (input: POINTER; mode: INTEGER; size: INTEGER; data: POINTER): INTEGER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRinput_append ((QRinput*)$input, (QRencodeMode)$mode, (int)$size, (unsigned char const*)$data);
			]"
		end

	c_qrinput_append_eciheader (input: POINTER; ecinum: INTEGER): INTEGER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRinput_appendECIheader ((QRinput*)$input, (unsigned int)$ecinum);
			]"
		end

	c_qrinput_get_version (input: POINTER): INTEGER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRinput_getVersion ((QRinput*)$input);
			]"
		end

	c_qrinput_set_version (input: POINTER; version: INTEGER): INTEGER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRinput_setVersion ((QRinput*)$input, (int)$version);
			]"
		end

	c_qrinput_get_error_correction_level (input: POINTER): INTEGER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRinput_getErrorCorrectionLevel ((QRinput*)$input);
			]"
		end

	c_qrinput_set_error_correction_level (input: POINTER; level: INTEGER): INTEGER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRinput_setErrorCorrectionLevel ((QRinput*)$input, (QRecLevel)$level);
			]"
		end

	c_qrinput_set_version_and_error_correction_level (input: POINTER; version: INTEGER; level: INTEGER): INTEGER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRinput_setVersionAndErrorCorrectionLevel ((QRinput*)$input, (int)$version, (QRecLevel)$level);
			]"
		end

	c_qrinput_free (input: POINTER)
		external
			"C inline use <qrencode.h>"
		alias
			"[
				QRinput_free ((QRinput*)$input);
			]"
		end

	c_qrinput_check (mode: INTEGER; size: INTEGER; data: POINTER): INTEGER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRinput_check ((QRencodeMode)$mode, (int)$size, (unsigned char const*)$data);
			]"
		end

	c_qrinput_struct_new: POINTER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRinput_Struct_new ();
			]"
		end

	c_qrinput_struct_set_parity (s: POINTER; parity: INTEGER)
		external
			"C inline use <qrencode.h>"
		alias
			"[
				QRinput_Struct_setParity ((QRinput_Struct*)$s, (unsigned char)$parity);
			]"
		end

	c_qrinput_struct_append_input (s: POINTER; input: POINTER): INTEGER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRinput_Struct_appendInput ((QRinput_Struct*)$s, (QRinput*)$input);
			]"
		end

	c_qrinput_struct_free (s: POINTER)
		external
			"C inline use <qrencode.h>"
		alias
			"[
				QRinput_Struct_free ((QRinput_Struct*)$s);
			]"
		end

	c_qrinput_split_qrinput_to_struct (input: POINTER): POINTER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRinput_splitQRinputToStruct ((QRinput*)$input);
			]"
		end

	c_qrinput_struct_insert_structured_append_headers (s: POINTER): INTEGER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRinput_Struct_insertStructuredAppendHeaders ((QRinput_Struct*)$s);
			]"
		end

	c_qrinput_set_fnc1first (input: POINTER): INTEGER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRinput_setFNC1First ((QRinput*)$input);
			]"
		end

	c_qrinput_set_fnc1second (input: POINTER; appid: INTEGER): INTEGER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRinput_setFNC1Second ((QRinput*)$input, (unsigned char)$appid);
			]"
		end

	c_qrcode_encode_input (input: POINTER): POINTER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRcode_encodeInput ((QRinput*)$input);
			]"
		end

	c_qrcode_encode_string (string: POINTER; version: INTEGER; level: INTEGER; hint: INTEGER; casesensitive: INTEGER): POINTER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRcode_encodeString ((char const*)$string, (int)$version, (QRecLevel)$level, (QRencodeMode)$hint, (int)$casesensitive);
			]"
		end

	c_qrcode_encode_string8bit (string: POINTER; version: INTEGER; level: INTEGER): POINTER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRcode_encodeString8bit ((char const*)$string, (int)$version, (QRecLevel)$level);
			]"
		end

	c_qrcode_encode_string_mqr (string: POINTER; version: INTEGER; level: INTEGER; hint: INTEGER; casesensitive: INTEGER): POINTER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRcode_encodeStringMQR ((char const*)$string, (int)$version, (QRecLevel)$level, (QRencodeMode)$hint, (int)$casesensitive);
			]"
		end

	c_qrcode_encode_string8bit_mqr (string: POINTER; version: INTEGER; level: INTEGER): POINTER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRcode_encodeString8bitMQR ((char const*)$string, (int)$version, (QRecLevel)$level);
			]"
		end

	c_qrcode_encode_data (size: INTEGER; data: POINTER; version: INTEGER; level: INTEGER): POINTER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRcode_encodeData ((int)$size, (unsigned char const*)$data, (int)$version, (QRecLevel)$level);
			]"
		end

	c_qrcode_encode_data_mqr (size: INTEGER; data: POINTER; version: INTEGER; level: INTEGER): POINTER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRcode_encodeDataMQR ((int)$size, (unsigned char const*)$data, (int)$version, (QRecLevel)$level);
			]"
		end

	c_qrcode_free (qrcode: POINTER)
		external
			"C inline use <qrencode.h>"
		alias
			"[
				QRcode_free ((QRcode*)$qrcode);
			]"
		end

	c_qrcode_encode_input_structured (s: POINTER): POINTER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRcode_encodeInputStructured ((QRinput_Struct*)$s);
			]"
		end

	c_qrcode_encode_string_structured (string: POINTER; version: INTEGER; level: INTEGER; hint: INTEGER; casesensitive: INTEGER): POINTER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRcode_encodeStringStructured ((char const*)$string, (int)$version, (QRecLevel)$level, (QRencodeMode)$hint, (int)$casesensitive);
			]"
		end

	c_qrcode_encode_string8bit_structured (string: POINTER; version: INTEGER; level: INTEGER): POINTER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRcode_encodeString8bitStructured ((char const*)$string, (int)$version, (QRecLevel)$level);
			]"
		end

	c_qrcode_encode_data_structured (size: INTEGER; data: POINTER; version: INTEGER; level: INTEGER): POINTER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRcode_encodeDataStructured ((int)$size, (unsigned char const*)$data, (int)$version, (QRecLevel)$level);
			]"
		end

	c_qrcode_list_size (qrlist: POINTER): INTEGER
		external
			"C inline use <qrencode.h>"
		alias
			"[
				return QRcode_List_size ((QRcode_List*)$qrlist);
			]"
		end

	c_qrcode_list_free (qrlist: POINTER)
		external
			"C inline use <qrencode.h>"
		alias
			"[
				QRcode_List_free ((QRcode_List*)$qrlist);
			]"
		end

	c_qrcode_apiversion (major_version: POINTER; minor_version: POINTER; micro_version: POINTER)
		external
			"C inline use <qrencode.h>"
		alias
			"[
				QRcode_APIVersion ((int*)$major_version, (int*)$minor_version, (int*)$micro_version);
			]"
		end

feature -- Externals Address

end
